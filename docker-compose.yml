services:
  app:
    build: .
    ports:
      - 8080:8080
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file: ".env"
    volumes:
      - ./.env:/app/.env


  migrate:
    image: migrate/migrate
    volumes:
      - ./db/migrations:/migrations
    command: ["-path", "/migrations", "-database", "postgresql://postgres:${POSTGRES_PASSWORD}@postgres:5432/dictionary?sslmode=disable", "up"]
    depends_on:
      - postgres

  postgres:
    image: postgres
    container_name: postgres_container
    restart: always
    ports:
      - 5438:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: dictionary
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
        test: ["CMD-SHELL", "pg_isready -U postgres"]
        interval: 10s
        timeout: 5s
        retries: 5

  redis:
    image: redis:latest
    container_name: redis_container
    restart: always
    ports:
      - 6380:6379
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  postgres_data: 

networks:
  app-network:
    driver: bridge